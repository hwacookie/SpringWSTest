/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.LicenseData;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "validUntil", description = "the validUntil API")
public interface ValidUntilApi {

    @ApiOperation(value = "Returns detailed license information", nickname = "validUntil", notes = "Checks how long a given license, identified by its ID, is still valid. ", response = LicenseData.class, tags={ "users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = LicenseData.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied") })
    @RequestMapping(value = "/validUntil",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<LicenseData> validUntil(@NotNull @ApiParam(value = "the ID of the license", required = true) @Valid @RequestParam(value = "licenseID", required = true) String licenseID);

}
